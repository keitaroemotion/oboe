#!/usr/bin/env ruby

# read a dsl file
# parse the file
# generate random index (less than maximum line count of the file)
# display key

def args
  ARGV.select {|a| a.start_with?("-") }
end

def values
  ARGV.select {|a| !a.start_with?("-") }
end

APP_NAME           = "oboe"
DEFAULT_EDITOR     = "vim"
WORDS_DIR          = "/usr/local/etc/oboe"
WORDS_FILE_DEFAULT = File.join(WORDS_DIR, "words.txt")
WORDS_FILE         = values.first || WORDS_FILE_DEFAULT

abort("file missing at: #{WORDS_FILE}") if !File.exist?(WORDS_FILE)

lines = File.open(WORDS_FILE, "r").each_line.to_a

lines = lines
          .select {|line| 
             line =~ /\w+[\,]?\w+/ 
          }
          .map {|line|
             line.chomp.split(",")
          }

def help
  puts
  puts "#{APP_NAME} -h     ... help"  
  puts "#{APP_NAME} -e     ... edit default file"  
  puts "#{APP_NAME}        ... play default file"  
  puts "#{APP_NAME} [file] ... play selected file"  
  puts
end

def disp(x)
  print "#{x}"
  input = $stdin.gets.chomp 
  abort if input =~ /[qQ]/
  input
end

def play(lines, idxs) 
  if idxs.size == lines.size
    abort
  end
  
  idx = rand(0..lines.size-1)

  if idxs.include?(idx)
    play(lines, idxs)
  end

  idxs = idxs.push idx

  k, v = lines[idx]
  disp k
  disp "[#{v.strip}]"
  puts
  play(lines, idxs)
end

if args.include?("-h")
  help
elsif args.include?("-e")
  system "#{DEFAULT_EDITOR} #{WORDS_FILE_DEFAULT}"
else
  play lines, []
end
